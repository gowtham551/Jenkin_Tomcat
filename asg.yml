---
- hosts: localhost
  become: yes
  tasks:
  - name: launch load balancer
    ec2_elb_lb:
      name: mylb
      region: us-east-1
      state: present
      subnets: subnet-a5abe48b
      security_group_ids: sg-4e7a7917
      connection_draining_timeout: 60
      listeners:
        - protocol: http
          load_balancer_port: 80
          instance_port: 80
      health_check:
          ping_protocol: http # options are http, https, ssl, tcp
          ping_port: 80
          ping_path: "/" # not required for tcp or ssl
          response_timeout: 5 # seconds
          interval: 30 # seconds
          unhealthy_threshold: 5
          healthy_threshold: 5
    tags: load_balancer
  - name: create launch config
    ec2_lc:
      name: mylc
      image_id: ami-09f8a37134737968b
      key_name: tower
      region: us-east-1
      security_groups: sg-4e7a7917
      instance_type: t2.micro
    tags: launch_config
  - name: create autoscale groups
    ec2_asg:
      name: myasg
      load_balancers: mylb
      launch_config_name: mylc
      min_size: 1
      max_size: 3
      desired_capacity: 1
      region: us-east-1
      vpc_zone_identifier:
        - subnet-250b9f1b
        - subnet-34f1cb3b
      health_check_type: EC2
      health_check_period: 300
  - name: create scale down  policy
    ec2_scaling_policy:
      state: present
      region: us-east-1
      name: scale-down-policy
      adjustment_type: ChangeInCapacity
      asg_name: myasg
      scaling_adjustment: -1
      min_adjustment_step: -1
      cooldown: 300
    register: scale_down_policy
    tags: scaling_policy
  - name: create scale up policy
    ec2_scaling_policy:
      state: present
      region: us-east-1
      name: scale-up-policy
      adjustment_type: ChangeInCapacity
      asg_name: myasg
      scaling_adjustment: 1
      min_adjustment_step: 1
      cooldown: 300
    register: scale_up_policy
    tags: scaling_policy
  - name: create scale down alarm
    ec2_metric_alarm:
      state: present
      region: us-east-1
      name: mysda
      metric: CPUUtilization
      namespace: "AWS/EC2"
      statistic: Average
      comparison: "<="
      threshold: 15
      period: 60
      evaluation_periods: 3
      unit: "Percent"
      description: "This will alarm when cpu usage average is lower than 5% for 15 minutes "
      dimensions: 
        AutoScalingGroupName: myasg
      alarm_actions:  "{{scale_down_policy.arn}}"
    tags: alarm
  - name: create scale up alarm
    ec2_metric_alarm:
      state: present
      region: us-east-1
      name: mysda
      metric: CPUUtilization
      namespace: "AWS/EC2"
      statistic: Average
      comparison: ">="
      threshold: 15.0
      period: 60
      evaluation_periods: 3
      unit: "Percent"
      description: "This will alarm when cpu usage average is lower than 5% for 15 minutes "
      dimensions:
        AutoScalingGroupName: myasg
      alarm_actions:  "{{scale_up_policy.arn}}"
    tags: alarm

